Recycler View

Data package
    class Datasource
        fun loadData(): List<Beta>{
            return listOf<Beta>(
                Beta(R....)
                Beta(R....)
                Beta(R....)
                Beta(R....)
            )
        }

Model package
    class Beta(val stringResourceId : Int)

MainActivity

val myDataset = Datasource().loadData()

val recyclerView = findViewById<RecyclerView>(R.id.recycler_view)

recyclerView.adapter = ItemAdapter(this, myDataset)

recyclerView.setHasFixedSize(true)

Adapter package

class ItemAdapter(
    private val context: Context,
    private val dataset: List<Affirmation>
) : RecyclerView.Adapter<ItemAdapter.ItemViewHolder>() {

    class ItemViewHolder(private val view: View) : RecyclerView.ViewHolder(view) {
        val textView: TextView = view.findViewById(R.id.item_title)
    }

    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ItemViewHolder {
        val adapterLayout = LayoutInflater.from(parent.context)
            .inflate(R.layout.list_item, parent, false)

        return ItemViewHolder(adapterLayout)
    }

    override fun onBindViewHolder(holder: ItemViewHolder, position: Int) {
        val item = dataset[position]
        holder.textView.text = context.resources.getString(item.stringResourceId)
    }

    override fun getItemCount() = dataset.size
}

ctrl + I

MainActivity Layout 
    recyclerView 
